name: Actualizacion automatico de los cambios del bot de Telegram

on:
  push:
    branches:
      - main  # Ejecutar este workflow en cada push a la rama principal

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Añadir la clave SSH al agente que se conectará al servidor.
    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.AWS_PEM }}

    # Verificar que la conexión SSH se realizó exitosamente.
    - name: Verify SSH connection
      env:
        EC2_IP: ${{ secrets.AWS_HOST }}
        EC2_USER: ${{ secrets.AWS_USER }}
      run: |
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "echo 'Conexión exitosa a EC2'"
    
    # Clonar o actualizar el repositorio en el servidor EC2
    - name: Actualizacion del repositorio
      env:
        EC2_IP: ${{ secrets.AWS_HOST }}
        EC2_USER: ${{ secrets.AWS_USER }}
        REPO_URL: ${{ secrets.HTTP_GIT }}
        DEPLOY_DIR: ${{ secrets.PATH_FOLDER }}
      run: |
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "
          set -e
          if [ ! -d '$DEPLOY_DIR' ]; then
            sudo mkdir -p '$DEPLOY_DIR'
            cd '$DEPLOY_DIR'
            sudo git clone '$REPO_URL' .
            sudo chmod 777 -R '$DEPLOY_DIR'
          else
            cd '$DEPLOY_DIR'
            sudo git reset --hard HEAD
            sudo git pull origin main
            sudo chmod 777 -R '$DEPLOY_DIR'
          fi"

    # Verificar y reiniciar el bot si está en ejecución
    - name: Verificar y reiniciar el bot de Telegram
      env:
        EC2_IP: ${{ secrets.AWS_HOST }}
        EC2_USER: ${{ secrets.AWS_USER }}
        DEPLOY_DIR: ${{ secrets.PATH_FOLDER }}
      run: |
        ssh -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP "
          set -e
          cd '$DEPLOY_DIR'
          
          # Buscar el proceso del bot
          BOT_PROCESS=\$(ps aux | grep 'bot_telegram' | grep -v grep || true)
          
          # Si está corriendo, matarlo
          if [ ! -z \"\$BOT_PROCESS\" ]; then
            echo 'Bot corriendo, deteniéndolo...'
            pkill -f bot_telegram
          fi

          # Ejecutar nuevamente el bot
          echo 'Iniciando bot de Telegram...'
          nohup python3 main.py > bot.log 2>&1 &
        "

          
        